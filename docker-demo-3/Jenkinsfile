pipeline{
 agent any
 options { buildDiscarder(logRotator(daysToKeepStr: '4', numToKeepStr: '2')) }
 parameters {
        string(name: 'APP_VERSION_NUMBER', defaultValue: ' ', description: 'App Version Number ?') 
        string(name: 'APP_ENABLED', defaultValue: '1', description: 'App Enabled ?') 
    }
 stages{    
  stage('Deploy Container') {
      steps {
         echo 'Deploying container'
         sh '''
             cd docker-demo-3
             terraform init -input=false
             touch mykey
             touch mykey.pub
             '''
        sh "cd docker-demo-3;terraform apply -input=false -auto-approve -target aws_ecs_task_definition.myapp-task-definition -var MYAPP_SERVICE_ENABLE=${params.APP_ENABLED} -var MYAPP_VERSION=${params.APP_VERSION_NUMBER}"
        sh "cd docker-demo-3;terraform apply -input=false -auto-approve -target aws_ecs_service.myapp-service -var MYAPP_SERVICE_ENABLE=${params.APP_ENABLED}"             
      }
    }

  }
  post {
        always {
            echo 'One way or another, I have finished'
            deleteDir() /* clean up our workspace */
        }
        success {
            echo 'I succeeeded!'
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            echo 'I failed :('
        }
        changed {
            echo 'Things were different before...'
        }
    }
 }
  
